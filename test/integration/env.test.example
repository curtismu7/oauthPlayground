# Test Environment Configuration for Real API Integration Tests
# 
# Copy this file to .env.test and fill in your test environment credentials
# 
# IMPORTANT: These tests make REAL API calls to PingOne test environment
# DO NOT use production credentials in this file
# 
# Security Features:
# - Environment validation prevents production runs
# - Automatic cleanup of test data
# - Secure credential handling
# - Test data isolation

# =============================================================================
# REQUIRED: PingOne Test Environment Credentials
# =============================================================================

# PingOne Test Environment Client ID (from PingOne Admin Console)
PINGONE_TEST_CLIENT_ID=your-test-client-id-here

# PingOne Test Environment Client Secret (from PingOne Admin Console)
PINGONE_TEST_CLIENT_SECRET=your-test-client-secret-here

# PingOne Test Environment ID (from PingOne Admin Console)
PINGONE_TEST_ENVIRONMENT_ID=your-test-environment-id-here

# PingOne Test Region (NorthAmerica, Europe, AsiaPacific)
PINGONE_TEST_REGION=NorthAmerica

# =============================================================================
# OPTIONAL: API Configuration
# =============================================================================

# API Base URL (default: http://localhost:4000)
API_BASE_URL=http://localhost:4000

# API Request Timeout in milliseconds (default: 30000)
API_TIMEOUT=30000

# =============================================================================
# OPTIONAL: Test Configuration
# =============================================================================

# Test timeout in milliseconds (default: 60000)
TEST_TIMEOUT=60000

# Number of retry attempts for failed requests (default: 3)
TEST_RETRY_ATTEMPTS=3

# Delay before cleanup in milliseconds (default: 5000)
TEST_CLEANUP_DELAY=5000

# =============================================================================
# OPTIONAL: Logging Configuration
# =============================================================================

# Test log level (debug, info, warn, error) (default: info)
TEST_LOG_LEVEL=info

# Enable request logging (true/false) (default: true)
TEST_LOG_REQUESTS=true

# Enable response logging (true/false) (default: true)
TEST_LOG_RESPONSES=true

# =============================================================================
# OPTIONAL: Security Configuration
# =============================================================================

# Enable environment guard to prevent production runs (true/false) (default: true)
TEST_ENVIRONMENT_GUARD=true

# Enable automatic cleanup of test data (true/false) (default: true)
TEST_CLEANUP_ENABLED=true

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 
# 1. Copy this file to .env.test:
#    cp test/integration/env.test.example test/integration/.env.test
# 
# 2. Fill in your PingOne test environment credentials:
#    - PINGONE_TEST_CLIENT_ID: Get from PingOne Admin Console
#    - PINGONE_TEST_CLIENT_SECRET: Get from PingOne Admin Console  
#    - PINGONE_TEST_ENVIRONMENT_ID: Get from PingOne Admin Console
#    - PINGONE_TEST_REGION: Choose your test region
# 
# 3. Start your API server:
#    npm start
# 
# 4. Run integration tests:
#    npm run test:integration:real
# 
# =============================================================================
# SECURITY NOTES
# =============================================================================
# 
# - Never commit .env.test to version control
# - Use test environment credentials only
# - Tests automatically clean up created data
# - Environment guard prevents production runs
# - Credentials are masked in logs
# 
# =============================================================================
# TROUBLESHOOTING
# =============================================================================
# 
# If tests fail with authentication errors:
# 1. Verify your PingOne credentials are correct
# 2. Ensure you're using test environment credentials
# 3. Check that your test environment is active
# 4. Verify API permissions for your client
# 
# If tests fail with timeout errors:
# 1. Increase TEST_TIMEOUT value
# 2. Check network connectivity
# 3. Verify API server is running
# 
# If cleanup fails:
# 1. Check TEST_CLEANUP_ENABLED is true
# 2. Verify API permissions for deletion
# 3. Check logs for specific error messages 